Predicate<T>

Consumer<T>

Function<T,R>

Supplier<T>

UnaryOperator<T>

BinaryOperator<T>

//--------------------------

Predicate<T>

public interface Predicate<T> {
boolean test(TR t);
}
--------------------------------
Consumer<T>

public interface Consumer<T> {
void accept(TR t);
}

--------------------------------
Function<T,R>

public interface Function<T,R> {
   R apply(T t);
   }
--------------------------------
Supplier<T>

public interface Supplier<T> {
    T get();
    }
--------------------------------
UnaryOperator<T>

public interface UnaryOperator<T> {
T apply(T t);
}

--------------------------------
BinaryOperator<T>

public interface BinaryOperator<T> {
T apply(T t1, T t2);
}